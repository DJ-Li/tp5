<?php
/**
 * Created by PhpStorm.
 * User: Adminstrator
 * Date: 2017/4/15
 * Time: 22:46
 */

namespace app\admin\model;


use app\common\model\AuthorityModel;
use think\Model;

class RoleModel extends Model
{
    protected $name = 'role', $authority_model, $menu_model;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->authority_model = new AuthorityModel();
        $this->menu_model = new MenuModel();
    }

    /**
     * 获取角色列表
     */
    public function get_role_list($pid = 0, $p, $size)
    {
        if ($size === false) {
            $limit = false;
        } else {
            $start = ($p - 1) * $size;
            if ($pid > 0) {
                $limit = "10";
            } else {
                $limit = "$start, $size";
            }
            $count = $this->where(['pid' => 0])->count();
            $page = ($count / $size);
        }
        $role_obj = $this->where(['pid' => $pid])->limit($limit)->order('sort')->select();

        if (empty($role_obj)) {
            return false;
        }
        $data = [];
        foreach ($role_obj as $index => $item) {
            $tmp = [
                'id'          => $item['id'],
                'name'        => $item['name'],
                'pid'         => $item['pid'],
                'state'       => $item['state'],
                'remark'      => $item['remark'],
                'add_time'    => $item['add_time'],
                'update_time' => $item['update_time'],
                'sort'        => $item['sort'],
            ];
            $data[] = $tmp;
        }
        $list['list'] = $data;
        $list['page'] = $page;
        return $list;
    }

    /**
     * 添加角色
     */
    public function add_role($data)
    {
        if (empty($data)) {
            return false;
        }
        $insert = $this->insert($data);
        if (!$insert) {
            return false;
        }
        return true;
    }

    /**
     * 编辑角色
     */
    public function edit_role($id, $data)
    {
        if ((empty($id) || !preg_match('/^+?[1-9][0-9]*$/', $id)) || empty($data)) {
            return false;
        }
        $save = $this->where(['id' => $id])->save($data);
        if (!$save) {
            return false;
        }
        return true;
    }

    /**
     * 获取菜单列表用户权限编辑
     * @param $data array
     * @param $role_id string
     * @param $level int
     * @return array
     */
    public function create_role($data = [], $role_id, $level)
    {
        if (empty($data)) {
            $data = $this->menu_model->get_tree(0);
        }
        $auth_menu_ids = $this->authority_model->by_role_id($role_id);
        if ($level == 0) {
            $start_label = "<li>";
            $end_label = "</li>";
        } elseif ($level > 0) {
            if ($level % 2 == 0) {
                $start_label = "<dd>";
                $end_label = "</dd>";
            } else {
                $start_label = "<dl>";
                $end_label = "</dl>";
            }
        }
        $tmp = "";
        foreach ($data as $index => $item) {
            if (!empty($auth_menu_ids) && in_array($item['id'], $auth_menu_ids)) {
                $tmp .= $start_label . "<input type='checkbox' checked name='role[{$item['id']}]' value='{$item['url']}' title='{$item['name']}' lay-filter='role'/>";
            } else {
                $tmp .= $start_label . "<input type='checkbox' name='role[{$item['id']}]' value='{$item['url']}' title='{$item['name']}' lay-filter='role'/>";
            }
            if (!empty($item['sub'])) {
                $tmp .= $this->create_role($item['sub'], $role_id, $level + 1);
            }
            $tmp .= $end_label;
        }
        return $tmp;
    }
}